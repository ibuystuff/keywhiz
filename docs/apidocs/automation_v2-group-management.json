{
  "apiVersion" : "1",
  "swaggerVersion" : "1.2",
  "basePath" : "https://square.github.io/keywhiz/apidocs",
  "resourcePath" : "/automation/v2-group-management",
  "apis" : [ {
    "path" : "/automation/v2/groups",
    "operations" : [ {
      "method" : "POST",
      "nickname" : "createGroup",
      "type" : "Response",
      "parameters" : [ {
        "type" : "CreateGroupRequestV2",
        "description" : "JSON request to create a group",
        "paramType" : "body",
        "name" : "request",
        "required" : true
      } ],
      "summary" : "Creates a group",
      "responseMessages" : [ {
        "code" : 201,
        "message" : "Created group"
      }, {
        "code" : 409,
        "message" : "Group already exists"
      } ],
      "consumes" : [ "application/json" ]
    }, {
      "method" : "GET",
      "nickname" : "groupListing",
      "type" : "Iterable",
      "summary" : "Retrieve listing of group names",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "List of group names"
      } ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/automation/v2/groups/{name}",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "groupInfo",
      "type" : "GroupDetailResponseV2",
      "parameters" : [ {
        "type" : "string",
        "description" : "Group name",
        "paramType" : "path",
        "name" : "name",
        "required" : true
      } ],
      "summary" : "Retrieve information on a group",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Group information retrieved"
      }, {
        "code" : 404,
        "message" : "Group not found"
      } ],
      "produces" : [ "application/json" ]
    }, {
      "method" : "DELETE",
      "nickname" : "deleteGroup",
      "type" : "Response",
      "parameters" : [ {
        "type" : "string",
        "description" : "Group name to delete",
        "paramType" : "path",
        "name" : "name",
        "required" : true
      } ],
      "summary" : "Delete a group",
      "responseMessages" : [ {
        "code" : 204,
        "message" : "Group deleted"
      }, {
        "code" : 404,
        "message" : "Group not found"
      } ]
    } ]
  }, {
    "path" : "/automation/v2/groups/{name}/clients",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "clientDetailForGroup",
      "type" : "array",
      "items" : {
        "$ref" : "Client"
      },
      "uniqueItems" : true,
      "parameters" : [ {
        "type" : "string",
        "description" : "Group name",
        "paramType" : "path",
        "name" : "name",
        "required" : true
      } ],
      "summary" : "Retrieve metadata for clients in a particular group.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Group information retrieved"
      }, {
        "code" : 404,
        "message" : "Group not found"
      } ],
      "produces" : [ "application/json" ]
    } ]
  }, {
    "path" : "/automation/v2/groups/{name}/secrets",
    "operations" : [ {
      "method" : "GET",
      "nickname" : "secretDetailForGroup",
      "type" : "array",
      "items" : {
        "$ref" : "SanitizedSecret"
      },
      "uniqueItems" : true,
      "parameters" : [ {
        "type" : "string",
        "description" : "Group name",
        "paramType" : "path",
        "name" : "name",
        "required" : true
      } ],
      "summary" : "Retrieve metadata for secrets in a particular group.",
      "responseMessages" : [ {
        "code" : 200,
        "message" : "Group information retrieved"
      }, {
        "code" : 404,
        "message" : "Group not found"
      } ],
      "produces" : [ "application/json" ]
    } ]
  } ],
  "models" : {
    "GroupDetailResponseV2" : {
      "id" : "GroupDetailResponseV2",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdAtSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "updatedAtSeconds" : {
          "type" : "integer",
          "format" : "int64"
        },
        "createdBy" : {
          "type" : "string"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "secrets" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "uniqueItems" : true
        },
        "clients" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "uniqueItems" : true
        },
        "metadata" : {
          "type" : "ImmutableMap"
        }
      }
    },
    "SanitizedSecret" : {
      "id" : "SanitizedSecret",
      "properties" : { }
    },
    "ApiDate" : {
      "id" : "ApiDate",
      "properties" : {
        "epochSecond" : {
          "type" : "integer",
          "format" : "int64"
        }
      }
    },
    "Client" : {
      "id" : "Client",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "createdAt" : {
          "type" : "ApiDate"
        },
        "createdBy" : {
          "type" : "string"
        },
        "updatedAt" : {
          "type" : "ApiDate"
        },
        "updatedBy" : {
          "type" : "string"
        },
        "lastSeen" : {
          "type" : "ApiDate"
        },
        "expiration" : {
          "type" : "ApiDate"
        },
        "enabled" : {
          "type" : "boolean"
        },
        "automationAllowed" : {
          "type" : "boolean"
        }
      }
    },
    "CreateGroupRequestV2" : {
      "id" : "CreateGroupRequestV2",
      "properties" : {
        "name" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "metadata" : {
          "type" : "ImmutableMap"
        }
      }
    }
  }
}
